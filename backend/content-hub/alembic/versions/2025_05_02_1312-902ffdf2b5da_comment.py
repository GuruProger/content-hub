"""comment

Revision ID: 902ffdf2b5da
Revises: 070ce4d0d6c3
Create Date: 2025-05-02 13:12:06.894759

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "902ffdf2b5da"
down_revision: Union[str, None] = "070ce4d0d6c3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("password", sa.LargeBinary(length=60), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("avatar", sa.LargeBinary(), nullable=True),
        sa.Column("bio", sa.Text(), nullable=True),
        sa.Column(
            "status", sa.Enum("ACTIVE", "DELETED", "BANNED", name="account_status"), nullable=False
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
        sa.UniqueConstraint("username", name=op.f("uq_user_username")),
    )
    op.create_table(
        "article",
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("rating", sa.Float(precision=2), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_article_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_article")),
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("article_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["article_id"], ["article.id"], name=op.f("fk_comment_article_id_article")
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name=op.f("fk_comment_user_id_user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_comment")),
    )
    op.create_table(
        "like_article",
        sa.Column("article_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["article_id"], ["article.id"], name=op.f("fk_like_article_article_id_article")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_like_article_user_id_user")
        ),
        sa.PrimaryKeyConstraint("article_id", "user_id", name=op.f("pk_like_article")),
    )
    op.execute("DROP TABLE IF EXISTS users CASCADE")
    op.drop_table("articles")
    op.drop_table("likes")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "likes",
        sa.Column("article_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="fk_likes_user_id_users"),
        sa.PrimaryKeyConstraint("article_id", "user_id", name="pk_likes"),
    )
    op.create_table(
        "articles",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("is_published", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("rating", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="fk_articles_user_id_users"),
        sa.PrimaryKeyConstraint("id", name="pk_articles"),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("password_hash", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM("USER", "ADMIN", name="user_role"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("avatar_url", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("bio", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("rating", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="pk_users"),
        sa.UniqueConstraint("email", name="uq_users_email"),
        sa.UniqueConstraint("username", name="uq_users_username"),
    )
    op.drop_table("like_article")
    op.drop_table("comment")
    op.drop_table("article")
    op.drop_table("user")
    # ### end Alembic commands ###
